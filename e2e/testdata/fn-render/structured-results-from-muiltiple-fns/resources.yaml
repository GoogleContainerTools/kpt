apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: invalid
---
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sconfigmapkeysrulesv1
spec:
  crd:
    spec:
      names:
        kind: K8sConfigMapKeysRulesV1
        validation:
          openAPIV3Schema:
            properties:
              keys:
                type: array
                items:
                  type: string
  targets:
  - rego: |-
      package ban_keys

      violation[{"msg": sprintf("%v", [val])}] {
        keys = {key | input.review.object.data[key]}
        banned = {key | input.parameters.keys[_] = key}
        overlap = keys & banned
        count(overlap) > 0
        val := sprintf("The following banned keys are being used in the ConfigMap: %v", [overlap])
      }
    target: admission.k8s.gatekeeper.sh
---
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sConfigMapKeysRulesV1
metadata:
  name: no-secrets-in-configmap
spec:
  enforcementAction: warn # create warning instead of errors
  match:
    kinds:
    - apiGroups:
      - ''
      kinds:
      - ConfigMap
  parameters:
    keys:
    - private_key
---
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sConfigMapKeysRulesV1
metadata:
  name: no-sensitive-data-in-configmap
spec:
  enforcementAction: dryrun # create info instead of errors
  match:
    kinds:
    - apiGroups:
      - ''
      kinds:
      - ConfigMap
  parameters:
    keys:
    - less_sensitive_key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: some-secret
  namespace: default
data:
  less_sensitive_key: less sensitive data goes here
  private_key: sensitive data goes here
