// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "mdtogo"; DO NOT EDIT.
package overview

var READMEShort = `![alt text][demo]`
var READMELong = `
kpt is a Kubernetes platform toolkit targeted at developing and configuring Resource packages.

It includes tools developed as part of the Kubernetes project as well as additional commands
specific to ` + "`" + `kpt` + "`" + `.

kpt packages are composed of Resource configuration, rather than code or templates.

The ` + "`" + `kpt` + "`" + ` command structure is as follows:

**Package Management: [pkg]**

- updating and syncing packages of Resource configuration from remote sources
- ` + "`" + `get` + "`" + `, ` + "`" + `update` + "`" + ` and ` + "`" + `diff` + "`" + ` packages

**Resource Configuration: [config]**

- viewing and modifying Resource configuration
- ` + "`" + `set` + "`" + ` fields, print ` + "`" + `tree` + "`" + ` structure

**Configuration Functions: [functions]**

- generating, transforming and validating Resource configuration
- ` + "`" + `run` + "`" + ` functional-images locally against packages

**Cluster Requests: [http]**

- making requests to the Kubernetes control-plane
- ` + "`" + `apply` + "`" + ` and ` + "`" + `diff` + "`" + ` packages against clusters

------

To install shell completion for ` + "`" + `kpt` + "`" + ` commands and flags (bash, fish and zsh), run:

    COMP_INSTALL=1 kpt

To uninstall shell completion for kpt run:

    COMP_UNINSTALL=1 kpt

` + "`" + `kpt` + "`" + ` invokes itself as its own completion command, which is registered with known shells
(e.g. .bashrc, .bash_profile, etc).

    complete -C /Users/USER/go/bin/kpt kpt
`
